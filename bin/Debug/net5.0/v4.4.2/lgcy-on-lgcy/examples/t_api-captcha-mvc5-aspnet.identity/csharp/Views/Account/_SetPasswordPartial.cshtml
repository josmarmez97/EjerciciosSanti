@model Mvc50CaptchaExampleCSharp.Models.ManageUserViewModel
@using BotDetect.Web.Mvc;
@using Mvc50CaptchaExampleCSharp.App_Code;
<p class="text-info">
    You do not have a local username/password for this site. Add a local
    account so you can log in without an external login.
</p>

@using (Html.BeginForm("Manage", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <h4>Create Local Login</h4>
    <hr />
    <div class="col-md-6" id="form-container">
        @Html.ValidationSummary()
        <div class="form-group">
            @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        @* showing Captcha on the form:
            add Captcha validation controls to the protected action View,
            but only if the Captcha hasn't already been solved *@

        @{MvcCaptcha changePasswordCaptcha = CaptchaHelper.GetChangePasswordCaptcha(); }
        @if (!changePasswordCaptcha.IsSolved)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.Captcha(changePasswordCaptcha)
                </div>

                @Html.Label("Retype the code", new { @class = "col-md-2 control-label", @for = "CaptchaCode" })
                <br />

                <div class="col-md-10">
                    @Html.TextBox("CaptchaCode", null, new { @class = "form-control captchaVal" })
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Set password" class="btn btn-default" />
            </div>
        </div>
    </div>
    <div class="col-md-6" id="notes">
        <div class="note">
            <h3>Description</h3>
            <p>This example project shows how to use the BotDetect <code>MvcCaptcha</code> control in ASP.NET MVC 5.0 web applications.</p>
            <p>Starting with the default ASP.NET MVC 5.0 Web Application project template, the example includes all code required to add CAPTCHA validation to the <code>Account</code> controller <code>Manage</code> action.</p>
            <p>The example also shows how to complement server-side CAPTCHA validation with client-side Ajax CAPTCHA validation using ASP.NET MVC 5.0 unobtrusive validation applied to all form fields (<code>Scripts\captcha.validate.js</code>).</p>
        </div>
        @if (MvcCaptcha.IsFree)
        {
            <div class="note warning">
                <h3>Free Version Limitations</h3>
                <ul>
                    <li>The free version of BotDetect includes a randomized <code>BotDetect™</code> trademark in the background of 50% of all Captcha images generated.</li>
                    <li>It also has limited sound functionality, replacing the CAPTCHA sound with "SOUND DEMO" for randomly selected 50% of all CAPTCHA codes.</li>
                    <li>Lastly, the bottom 10 px of the CAPTCHA image are reserved for a link to the BotDetect website.</li>
                </ul>
                <p>All of these limitations are removed if you <a href="http://captcha.com/shop.html?utm_source=installation&amp;utm_medium=aspnet&amp;utm_campaign=4.4.2" rel="nofollow" title="BotDetect CAPTCHA online store, pricing information, payment options, licensing &amp; upgrading">upgrade</a> your BotDetect license.</p>
            </div>
        }
    </div>
}
